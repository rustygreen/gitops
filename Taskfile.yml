---
version: "3"

vars:
  CLUSTER: "{{.CLUSTER}}"
  ENV: "{{.ENV}}"
  CLUSTER_PATH: "{{.CLUSTER}}/{{.ENV}}"
  CLUSTER_ROOT_DIR: "{{.ROOT_DIR}}/clusters/{{.CLUSTER}}"
  CLUSTER_DIR: "{{.CLUSTER_ROOT_DIR}}/{{.ENV}}"
  KUBERNETES_DIR: "{{.CLUSTER_DIR}}"
  ANSIBLE_DIR: "{{.ROOT_DIR}}/tools/ansible"
  TERRAFORM_DIR: "{{.ROOT_DIR}}/terraform"

dotenv: [".config.env"]

env:
  KUBECONFIG: "{{.ROOT_DIR}}/kubeconfig"

includes:
  ansible: .taskfiles/AnsibleTasks.yml
  cluster: .taskfiles/ClusterTasks.yml
  precommit: .taskfiles/PrecommitTasks.yml
  sops: .taskfiles/SopsTasks.yml
  git: .taskfiles/GitTasks.yml
  terraform: .taskfiles/TerraformTasks.yml

tasks:

  init:
    desc: Initialize workstation dependencies with Brew
    cmds:
      - brew install {{.DEPS}} {{.CLI_ARGS}}
    preconditions:
      - sh: command -v brew
        msg: |
          Homebrew is not installed. Using MacOS, Linux or WSL?
          Head over to https://brew.sh to get up and running.
    vars:
      DEPS: >-
        age
        ansible
        direnv
        fluxcd/tap/flux
        go-task/tap/go-task
        helm
        ipcalc
        jq
        kubernetes-cli
        kustomize
        pre-commit
        prettier
        sops
        stern
        terraform
        tflint
        weaveworks/tap/gitops
        yamllint
        yq

  verify:
    desc: Verify env settings
    cmds:
      - ./configure --verify

  configure:
    desc: Configure repository from env settings
    cmds:
      - ./configure

  check:
    desc: Checks the current context
    cmds:
      - "echo Cluster: {{.CLUSTER}}"
      - "echo Environment: {{.ENV}}"
      - "echo Project Directory: {{.PROJECT_DIR}}"
      - "echo Cluster Directory: {{.CLUSTER_DIR}}"

  recreate:
    desc: Recreates the cluster from scratch (nukes existing and creates new)
    cmds:
      - task: ansible:nuke
      - sleep 5 & echo Cluster destroyed
      - task: create

  create:
    desc: Creates the cluster
    cmds:
      - task: ansible:install
      - mv provision/kubeconfig {{.CLUSTER_DIR}} -f
      - rm -r provision
      - export KUBECONFIG={{.CLUSTER_DIR}}/kubeconfig
      - kubectl get nodes
      - task: cluster:verify
      - task: cluster:install

  sync:
    desc: Commits and pushes all changes and then reconciles repository
    cmds:
      - task: git:push
      - sleep 2
      - task: cluster:reconcile
      - sleep 5
      - task: cluster:kustomizations
