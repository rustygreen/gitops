---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: ${HOME_ASSISTANT_NAMESPACE:=home-assistant}
spec:
  interval: ${HELM_RELEASE_INTERVAL:=24h}
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 1.3.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    image:
      repository: homeassistant/home-assistant
      tag: 2023.2.3
      pullPolicy: IfNotPresent
    strategy:
      type: Recreate
    env:
      TZ: ${TIMEZONE}
      # Postgres database
      POSTGRES_HOST: postgres-rw.home-assistant.svc.cluster.local
      POSTGRES_DB: home-assistant
      # Home-Assistant
      # SECRET_RECORDER_DB_URL: "postgresql://home-assistant:{{ .hass_postgres_password }}@postgres-rw.home-assistant.svc.cluster.local/home-assistant"
      SECRET_EXTERNAL_URL: https://home.${PRIMARY_DOMAIN}
      SECRET_TRUSTED_PROXIES_1: ${NETWORK_K8S_CLUSTER_CIDR}
      # Home-Assistant Zones
      SECRET_ZONE_HOME_HOUSE_NUMBER: "${HOUSE_NUMBER}"
      SECRET_ZONE_HOME_POSTAL_CODE: "${POSTAL_CODE}"
      SECRET_ZONE_HOME_ELEVATION: "${HOME_ELEVATION}"
      SECRET_ZONE_HOME_LATITUDE: "${HOME_LATITUDE}"
      SECRET_ZONE_HOME_LONGITUDE: "${HOME_LONGITUDE}"
    envFrom:
      - name: POSTGRES_SUPER_USER
        valueFrom:
          secretKeyRef:
            name: postgres-superuser
            key: username
      - name: POSTGRES_SUPER_PASS
        valueFrom:
          secretKeyRef:
            name: postgres-superuser
            key: password
      - name: POSTGRES_USER
        valueFrom:
          secretKeyRef:
            name: postgres-app
            key: username
      - name: POSTGRES_PASS
        valueFrom:
          secretKeyRef:
            name: postgres-app
            key: password
    hostNetwork: true
    dnsPolicy: ClusterFirstWithHostNet
    service:
      main:
        type: LoadBalancer
        loadBalancerIP: ${HOME_ASSISTANT_IP}
        ports:
          http:
            port: 8123
          mdns-tcp:
            enabled: true
            port: 5353
            protocol: TCP
            targetPort: 5353
          mdns-udp:
            enabled: true
            port: 5353
            protocol: UDP
            targetPort: 5353
    ingress:
      main:
        enabled: true
        hosts:
        - host: &host "home.${PRIMARY_DOMAIN}"
          paths:
          - path: /
            pathType: Prefix
        tls:
        - hosts:
          - *host
    prometheus:
      serviceMonitor:
        enabled: false
    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: true
    persistence:
      config:
        enabled: true
        existingClaim: home-assistant-config
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        memory: 750Mi
    addons:
      codeserver:
        enabled: true
        image:
          repository: ghcr.io/coder/code-server
          tag: 4.9.1
        env:
          TZ: ${TIMEZONE}
        workingDir: "/config"
        args:
            - --auth
            - "none"
            - --user-data-dir
            - "/config/.vscode"
            - --extensions-dir
            - "/config/.vscode"
        ingress:
          enabled: true
          # TODO: Add this
          annotations:
            hajimari.io/appName: "Hass Config"
            hajimari.io/icon: cib:visual-studio-code
            # nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}"
            # nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/api/verify"
          hosts:
          - host: &vscode-host "home-code.${PRIMARY_DOMAIN}"
            paths:
            - path: /
              pathType: Prefix
          tls:
          - hosts:
            - *vscode-host
        volumeMounts:
        - name: config
          mountPath: /config
